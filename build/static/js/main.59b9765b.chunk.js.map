{"version":3,"sources":["components/routing/PrivateRoute.js","components/screens/PrivateScreen.js","components/screens/LoginScreen.js","components/screens/RegisterScreen.js","components/screens/ForgotPasswordScreen.js","components/screens/ResetPasswordScreen.js","components/Navbar.js","components/SideDrawer.js","components/Backdrop.js","components/Product.js","redux/constants/productConstants.js","screens/HomeScreen.js","redux/actions/productActions.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","screens/ProductScreen.js","components/CartItem.js","screens/CartScreen.js","App.js","reportWebVitals.js","redux/reducers/cartReducers.js","redux/store.js","redux/reducers/productReducers.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","localStorage","getItem","to","PrivateScreen","useState","error","setError","privateData","setPrivateData","useEffect","a","config","headers","Authorization","axios","get","data","removeItem","fetchPrivateDate","className","LoginScreen","history","email","setEmail","password","setPassword","push","loginHandler","e","preventDefault","header","post","setItem","token","response","setTimeout","onSubmit","htmlFor","type","required","id","placeholder","onChange","target","value","tabIndex","autoComplete","RegisterScreen","username","setUsername","confirmpassword","setConfirmPassword","registerHandler","ForgotPasswordScreen","success","setSuccess","forgotPasswordHandler","ResetPasswordScreen","match","confirmPassword","resetPasswordHandler","put","params","resetToken","console","log","Navbar","click","cartItems","useSelector","state","cart","reduce","qty","item","Number","onClick","SideDrawer","show","sideDrawerClass","join","Backdrop","Product","imageUrl","description","price","name","productId","src","alt","substring","GET_PRODUCTS_REQUEST","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAIL","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","GET_PRODUCT_DETAILS_RESET","HomeScreen","dispatch","useDispatch","getProducts","products","loading","actionTypes","payload","message","map","product","_id","ADD_TO_CART","REMOVE_FROM_CART","addToCart","getState","countInStock","JSON","stringify","ProductScreen","setQty","productDetails","getProductDetails","Array","keys","x","CartItem","qtyChangeHandler","removeHandler","toast","configure","CartScreen","removeFromCartHandler","removeFromCart","getCartSubTotal","toFixed","React","addresses","status","length","stripeKey","billingAddress","shippingAddress","amount","App","sideToggle","setSideToggle","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CART_INITIAL_STATE","reducer","combineReducers","action","existItem","find","filter","middleware","thunk","INITIAL_STATE","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59b9765b.chunk.js","sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem(\"authToken\") ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./PrivateScreen.css\";\r\n\r\nconst PrivateScreen = () => {\r\n  const [error, setError] = useState(\"\");\r\n  const [privateData, setPrivateData] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchPrivateDate = async () => {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"authToken\")}`,\r\n        },\r\n      };\r\n\r\n      try {\r\n        const { data } = await axios.get(\"/api/private\", config);\r\n        setPrivateData(data.data);\r\n      } catch (error) {\r\n        localStorage.removeItem(\"authToken\");\r\n        setError(\"You are not authorized please login\");\r\n      }\r\n    };\r\n\r\n    fetchPrivateDate();\r\n  }, []);\r\n  return error ? (\r\n    <span className=\"error-message\">{error}</span>\r\n  ) : (\r\n    <div>{privateData}</div>\r\n  );\r\n};\r\n\r\nexport default PrivateScreen;","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./LoginScreen.css\";\r\n\r\nconst LoginScreen = ({ history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"authToken\")) {\r\n      history.push(\"/\");\r\n    }\r\n  }, [history]);\r\n\r\n  const loginHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/login\",\r\n        { email, password },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-screen\">\r\n      <form onSubmit={loginHandler} className=\"login-screen__form\">\r\n        <h3 className=\"login-screen__title\">Login</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n            tabIndex={1}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">\r\n            Password:{\" \"}\r\n            <Link to=\"/forgotpassword\" className=\"login-screen__forgotpassword\">\r\n              Forgot Password?\r\n            </Link>\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            value={password}\r\n            tabIndex={2}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n\r\n        <span className=\"login-screen__subtext\">\r\n          Don't have an account? <Link to=\"/register\">Register</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nconst RegisterScreen = ({ history }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmpassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        {\r\n          username,\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            autoComplete=\"true\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmpassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ForgotPasswordScreen.css\";\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const forgotPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/forgotpassword\",\r\n        { email },\r\n        config\r\n      );\r\n\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setEmail(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"forgotpassword-screen\">\r\n      <form\r\n        onSubmit={forgotPasswordHandler}\r\n        className=\"forgotpassword-screen__form\"\r\n      >\r\n        <h3 className=\"forgotpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error}</span>}\r\n        {success && <span className=\"success-message\">{success}</span>}\r\n        <div className=\"form-group\">\r\n          <p className=\"forgotpassword-screen__subtext\">\r\n            Please enter the email address you register your account with. We\r\n            will send you reset password confirmation to this email\r\n          </p>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Send Email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPasswordScreen;","import { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport \"./ResetPasswordScreen.css\";\r\n\r\nconst ResetPasswordScreen = ({ history, match }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const resetPasswordHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Passwords don't match\");\r\n    }\r\n\r\n    try {\r\n      const { data } = await axios.put(\r\n        `/api/auth/passwordreset/${match.params.resetToken}`,\r\n        {\r\n          password,\r\n        },\r\n        config\r\n      );\r\n\r\n      console.log(data);\r\n      setSuccess(data.data);\r\n    } catch (error) {\r\n      setError(error.response.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"resetpassword-screen\">\r\n      <form\r\n        onSubmit={resetPasswordHandler}\r\n        className=\"resetpassword-screen__form\"\r\n      >\r\n        <h3 className=\"resetpassword-screen__title\">Forgot Password</h3>\r\n        {error && <span className=\"error-message\">{error} </span>}\r\n        {success && (\r\n          <span className=\"success-message\">\r\n            {success} <Link to=\"/login\">Login</Link>\r\n          </span>\r\n        )}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter new password\"\r\n            autoComplete=\"true\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm new password\"\r\n            autoComplete=\"true\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordScreen;","import \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navbar = ({ click }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar__logo\">\r\n        <h2>MERN Shopping Cart</h2>\r\n      </div>\r\n\r\n      <ul className=\"navbar__links\">\r\n        <li>\r\n          <Link to=\"/cart\" className=\"cart__link\">\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n            <span>\r\n              Cart <span className=\"cartlogo__badge\">{getCartCount()}</span>\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Shop</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"hamburger__menu\" onClick={click}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./SideDrawer.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SideDrawer = ({ show, click }) => {\r\n  const sideDrawerClass = [\"sidedrawer\"];\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  if (show) {\r\n    sideDrawerClass.push(\"show\");\r\n  }\r\n\r\n  return (\r\n    <div className={sideDrawerClass.join(\" \")}>\r\n      <ul className=\"sidedrawer__links\" onClick={click}>\r\n        <li>\r\n          <Link to=\"/cart\">\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n            <span>\r\n              Cart{\" \"}\r\n              <span className=\"sidedrawer__cartbadge\">{getCartCount()}</span>\r\n            </span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/\">Shop</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import \"./Backdrop.css\";\r\n\r\nconst Backdrop = ({ click, show }) => {\r\n  return show && <div className=\"backdrop\" onClick={click}></div>;\r\n};\r\n\r\nexport default Backdrop;\r\n","import \"./Product.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Product = ({ imageUrl, description, price, name, productId }) => {\r\n  return (\r\n    <div className=\"product\">\r\n      <img src={imageUrl} alt={name} />\r\n\r\n      <div className=\"product__info\">\r\n        <p className=\"info__name\">{name}</p>\r\n\r\n        <p className=\"info__description\">{description.substring(0, 100)}...</p>\r\n\r\n        <p className=\"info__price\">${price}</p>\r\n\r\n        <Link to={`/product/${productId}`} className=\"info__button\">\r\n          View\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","export const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\";\r\nexport const GET_PRODUCTS_SUCCESS = \"GET_PRODUCTS_SUCCESS\";\r\nexport const GET_PRODUCTS_FAIL = \"GET_PRODUCTS_FAIL\";\r\n\r\nexport const GET_PRODUCT_DETAILS_REQUEST = \"GET_PRODUCT_DETAILS_REQUEST\";\r\nexport const GET_PRODUCT_DETAILS_SUCCESS = \"GET_PRODUCT_DETAILS_SUCCESS\";\r\nexport const GET_PRODUCT_DETAILS_FAIL = \"GET_PRODUCT_DETAILS_FAIL\";\r\nexport const GET_PRODUCT_DETAILS_RESET = \"GET_PRODUCT_DETAILS_RESET\";\r\n","import \"./HomeScreen.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n// Components\r\nimport Product from \"../components/Product\";\r\n\r\n//Actions\r\nimport { getProducts as listProducts } from \"../redux/actions/productActions\";\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const getProducts = useSelector((state) => state.getProducts);\r\n  const { products, loading, error } = getProducts;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"homescreen\">\r\n      <h2 className=\"homescreen__title\">Latest Products</h2>\r\n      <div className=\"homescreen__products\">\r\n        {loading ? (\r\n          <h2>Loading...</h2>\r\n        ) : error ? (\r\n          <h2>{error}</h2>\r\n        ) : (\r\n          products.map((product) => (\r\n            <Product\r\n              key={product._id}\r\n              name={product.name}\r\n              description={product.description}\r\n              price={product.price}\r\n              imageUrl={product.imageUrl}\r\n              productId={product._id}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import * as actionTypes from \"../constants/productConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get(\"/api/products\");\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeProductDetails = () => (dispatch) => {\r\n  dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_RESET });\r\n};\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      imageUrl: data.imageUrl,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n","import \"./ProductScreen.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n// Actions\r\nimport { getProductDetails } from \"../redux/actions/productActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst ProductScreen = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.getProductDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(() => {\r\n    if (product && match.params.id !== product._id) {\r\n      dispatch(getProductDetails(match.params.id));\r\n    }\r\n  }, [dispatch, match, product]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(product._id, qty));\r\n    history.push(`/cart`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"productscreen\">\r\n      {loading ? (\r\n        <h2>Loading...</h2>\r\n      ) : error ? (\r\n        <h2>{error}</h2>\r\n      ) : (\r\n        <>\r\n          <div className=\"productscreen__left\">\r\n            <div className=\"left__image\">\r\n              <img src={product.imageUrl} alt={product.name} />\r\n            </div>\r\n            <div className=\"left__info\">\r\n              <p className=\"left__name\">{product.name}</p>\r\n              <p>Price: ${product.price}</p>\r\n              <p>Description: {product.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"productscreen__right\">\r\n            <div className=\"right__info\">\r\n              <p>\r\n                Price:\r\n                <span>${product.price}</span>\r\n              </p>\r\n              <p>\r\n                Status:\r\n                <span>\r\n                  {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\r\n                </span>\r\n              </p>\r\n              <p>\r\n                Qty\r\n                <select value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                  {[...Array(product.countInStock).keys()].map((x) => (\r\n                    <option key={x + 1} value={x + 1}>\r\n                      {x + 1}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </p>\r\n              <p>\r\n                <button type=\"button\" onClick={addToCartHandler}>\r\n                  Add To Cart\r\n                </button>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import \"./CartItem.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = ({ item, qtyChangeHandler, removeHandler }) => {\r\n  return (\r\n    <div className=\"cartitem\">\r\n      <div className=\"cartitem__image\">\r\n        <img src={item.imageUrl} alt={item.name} />\r\n      </div>\r\n      <Link to={`/product/${item.product}`} className=\"cartItem__name\">\r\n        <p>{item.name}</p>\r\n      </Link>\r\n      <p className=\"cartitem__price\">${item.price}</p>\r\n      <select\r\n        value={item.qty}\r\n        onChange={(e) => qtyChangeHandler(item.product, e.target.value)}\r\n        className=\"cartItem__select\"\r\n      >\r\n        {[...Array(item.countInStock).keys()].map((x) => (\r\n          <option key={x + 1} value={x + 1}>\r\n            {x + 1}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button\r\n        className=\"cartItem__deleteBtn\"\r\n        onClick={() => removeHandler(item.product)}\r\n      >\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import \"./CartScreen.css\";\r\nimport React from \"react\";\r\n//import ReactDOM from \"react-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n// Components\r\nimport CartItem from \"../components/CartItem\";\r\n\r\n// Actions\r\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; \r\n//impor \"./styles.css\";\r\n\r\ntoast.configure();\r\n\r\n\r\n\r\nconst CartScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const qtyChangeHandler = (id, qty) => {\r\n    dispatch(addToCart(id, qty));\r\n  };\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const getCartCount = () => {\r\n    return cartItems.reduce((qty, item) => Number(item.qty) + qty, 0);\r\n  };\r\n\r\n  const getCartSubTotal = () => {\r\n    return cartItems\r\n      .reduce((price, item) => price + item.price * item.qty, 0)\r\n      .toFixed(2);\r\n  };\r\n\r\n  const price = getCartSubTotal();\r\n\r\n  const [product] = React.useState({\r\n    name: \"Tesla Roadster\",\r\n    price: price,\r\n    description: \"Cool car\"\r\n  });\r\n  async function handleToken(token, addresses) {\r\n\t  console.log({ token, addresses });\r\n\t  const response = await axios.post(\r\n\t\t\"https://backend-dos.herokuapp.com/cart\",\r\n\t\t{ token, product }\r\n\t  );\r\n\t  const { status } = response.data;\r\n\t  console.log(\"Response:\", response.data);\r\n\t  if (status === \"success\") {\r\n\t\ttoast(\"Success! Check email for details\", { type: \"success\" });\r\n\t  } else {\r\n\t\ttoast(\"Something went wrong\", { type: \"error\" });\r\n\t  }\r\n  };\r\n  \r\n  //console.log(price);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cartscreen\">\r\n        <div className=\"cartscreen__left\">\r\n          <h2>Shopping Cart</h2>\r\n\r\n          {cartItems.length === 0 ? (\r\n            <div>\r\n              Your Cart Is Empty <Link to=\"/\">Go Back</Link>\r\n            </div>\r\n          ) : (\r\n            cartItems.map((item) => (\r\n              <CartItem\r\n                key={item.product}\r\n                item={item}\r\n                qtyChangeHandler={qtyChangeHandler}\r\n                removeHandler={removeFromCartHandler}\r\n              />\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"cartscreen__right\">\r\n          <div className=\"cartscreen__info\">\r\n            <p>Subtotal ({getCartCount()}) items</p>\r\n            <p>${getCartSubTotal()}</p>\r\n          </div>\r\n          <div>\r\n            <StripeCheckout\r\n\t\t\tstripeKey=\"pk_test_51KNXCBIIQnKtwtkJ7y26OKUg6U2JAlMMqOjcMBn555yuTWEEU24g7Ulgi0dtm0b39QM4mAcfHgcoq9IsfvfcwDOQ00B4JaYIUd\" \r\n\t\t\ttoken={handleToken}\r\n\t\t\tbillingAddress\r\n\t\t\tshippingAddress\r\n\t\t\tamount={price * 100}\r\n\t\t\tname=\"Books\"\r\n\t\t\t/>\r\n          </div>\r\n\t\t  <div>\r\n            <button>Checkout with M-Pesa</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n// Routing\r\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\r\n\r\n// Screens\r\nimport PrivateScreen from \"./components/screens/PrivateScreen\";\r\nimport LoginScreen from \"./components/screens/LoginScreen\";\r\nimport RegisterScreen from \"./components/screens/RegisterScreen\";\r\nimport ForgotPasswordScreen from \"./components/screens/ForgotPasswordScreen\";\r\nimport ResetPasswordScreen from \"./components/screens/ResetPasswordScreen\";\r\n\r\n// Components\r\nimport Navbar from \"./components/Navbar\";\r\nimport SideDrawer from \"./components/SideDrawer\";\r\nimport Backdrop from \"./components/Backdrop\";\r\n\r\n// more Screens\r\nimport HomeScreen from \"./screens/HomeScreen\";\r\nimport ProductScreen from \"./screens/ProductScreen\";\r\nimport CartScreen from \"./screens/CartScreen\";\r\n\r\n//const { spawn } = require('child_process');\r\n//const child = spawn('dir', [], {shell: true});\r\n\r\nconst App = () => {\r\n  const [sideToggle, setSideToggle] = useState(false);\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar click={() => setSideToggle(true)} />\r\n      <SideDrawer show={sideToggle} click={() => setSideToggle(false)} />\r\n      <Backdrop show={sideToggle} click={() => setSideToggle(false)} />\r\n      <main className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomeScreen} />\r\n          <Route exact path=\"/product/:id\" component={ProductScreen} />\r\n          <Route exact path=\"/cart\" component={CartScreen} />\r\n          <PrivateRoute exact path=\"/private\" component={PrivateScreen} />\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n          <Route exact path=\"/register\" component={RegisterScreen} />\r\n          <Route\r\n            exact\r\n            path=\"/forgotpassword\"\r\n            component={ForgotPasswordScreen}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/passwordreset/:resetToken\"\r\n            component={ResetPasswordScreen}\r\n          />\r\n        </Switch>\r\n      </main>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\n\r\nconst CART_INITIAL_STATE = {\r\n  cartItems: [],\r\n};\r\n\r\nexport const cartReducer = (state = CART_INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.product === existItem.product ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// Reducers\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  getProductsReducer,\r\n  getProductDetailsReducer,\r\n} from \"./reducers/productReducers\";\r\n\r\nconst reducer = combineReducers({\r\n  cart: cartReducer,\r\n  getProducts: getProductsReducer,\r\n  getProductDetails: getProductDetailsReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartItemsInLocalStorage = localStorage.getItem(\"cart\")\r\n  ? JSON.parse(localStorage.getItem(\"cart\"))\r\n  : [];\r\n\r\nconst INITIAL_STATE = {\r\n  cart: {\r\n    cartItems: cartItemsInLocalStorage,\r\n  },\r\n};\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from \"../constants/productConstants\";\r\n\r\nexport const getProductsReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case actionTypes.GET_PRODUCTS_SUCCESS:\r\n      return {\r\n        products: action.payload,\r\n        loading: false,\r\n      };\r\n    case actionTypes.GET_PRODUCTS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProductDetailsReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCT_DETAILS_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        product: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case actionTypes.GET_PRODUCT_DETAILS_RESET:\r\n      return {\r\n        product: {},\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\n//const { spawn } = require('child_process');\r\n//const child = spawn('dir', [], {shell: true});\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}